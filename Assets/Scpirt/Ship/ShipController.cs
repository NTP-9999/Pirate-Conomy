using UnityEngine;
public class ShipController : MonoBehaviour
{
    public float acceleration = 5f;
    public float maxSpeed = 10f;
    public float turnSpeed = 30f;
    public float waterDrag = 0.5f;

    private Rigidbody rb;
    private float currentForwardInput = 0f;
    private float currentTurnInput = 0f;
    private ShipEnterExit enterExit;

    private float yRotation; // ‚úÖ ‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡πâ‡∏≤‡∏¢‡∏°‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
    private float fixedYValue;

    void Start()
    {
        Vector3 currentEuler = transform.eulerAngles;
        yRotation = currentEuler.y; // ‡πÄ‡∏Å‡πá‡∏ö rotation Y ‡∏ï‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°
        fixedYValue = transform.position.y;

        enterExit = GetComponent<ShipEnterExit>();
        rb = GetComponent<Rigidbody>();
    }

    void FixedUpdate()
    {
        // üîí ‡∏•‡πá‡∏≠‡∏Ñ Rotation X/Z ‡πÅ‡∏ï‡πà‡∏£‡∏±‡∏Å‡∏©‡∏≤ Y
        transform.rotation = Quaternion.Euler(-4.696f, yRotation, 0f);

        // üîí ‡∏•‡πá‡∏≠‡∏Ñ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á Y
        Vector3 position = transform.position;
        position.y = fixedYValue;
        transform.position = position;

        ApplyDrag();
        HandleMovement();
    }

    void HandleMovement()
    {
        if (enterExit == null || !enterExit.IsControlling) return;

        currentForwardInput = Input.GetAxis("Vertical");
        currentTurnInput = Input.GetAxis("Horizontal");

        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Rotation Y ‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï yRotation
        yRotation += currentTurnInput * turnSpeed * Time.fixedDeltaTime;

        // ‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà
        Vector3 force = transform.forward * currentForwardInput * acceleration;
        if (rb.linearVelocity.magnitude < maxSpeed)
        {
            rb.AddForce(force, ForceMode.Acceleration);
        }
    }

    void ApplyDrag()
    {
        Vector3 horizontalVelocity = new Vector3(rb.linearVelocity.x, 0, rb.linearVelocity.z);
        Vector3 dragForce = -horizontalVelocity * waterDrag;
        rb.AddForce(dragForce, ForceMode.Acceleration);
    }
}
